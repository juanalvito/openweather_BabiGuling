[{"D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\src\\index.js":"1","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\src\\reportWebVitals.js":"2","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\src\\App.js":"3"},{"size":709,"mtime":1607954932640,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":4414,"mtime":1607954418950,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pl6tu8",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},"D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\src\\index.js",[],"D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\src\\reportWebVitals.js",[],["16","17"],"D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\src\\App.js",["18"],"import './App.css';\nimport background from './background.jpg';\nimport React, { useState } from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\n\n\nconst api = {\n  key: \"8697c160d5b6f3e77321569b00079a03\",\n  base: \"http://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setQuery('');\n          setWeather(result); \n          console.log(result);\n        });\n    }\n  }\n\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days =[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day}, ${date} ${month} ${year}`\n  }\n  const useStyles = makeStyles({\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n  });\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n  return (\n    <div className=\"app\">\n      {['Menu'].map((anchor) => (\n  <React.Fragment key={anchor}>\n    <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n      {list(anchor)}\n    </Drawer>\n  </React.Fragment>\n))}\n      <main>\n        <div className=\"searchbox\">\n          <input type=\"text\" className=\"search\" placeholder=\"Search country or city here...\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}></input>\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n            <div className=\"location-place\">\n              <div className=\"location\">{weather.name}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"suhu-place\">\n              <div className=\"suhu\">\n                {Math.round(weather.main.temp)}Â°C\n              </div>\n            </div>\n            <div className=\"weather-place\">\n              <img className=\"city-icon\" src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description}/>\n              <div className=\"weather\">\n                {weather.weather[0].description}\n              </div>\n            </div>\n        </div>  \n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":2,"column":8,"nodeType":"25","messageId":"26","endLine":2,"endColumn":18},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'background' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]