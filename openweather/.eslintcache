[{"D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\index.js":"1","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\forecast.js":"2","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\reportWebVitals.js":"3","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\App.js":"4","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\polution.js":"5","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\WeatherForecast.js":"6","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\ForecastTiles.js":"7","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\DetailedInfo.js":"8","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\aboutus.js":"9"},{"size":984,"mtime":1608296420028,"results":"10","hashOfConfig":"11"},{"size":5720,"mtime":1608298916852,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608224228000,"results":"13","hashOfConfig":"11"},{"size":6833,"mtime":1608298896979,"results":"14","hashOfConfig":"11"},{"size":6576,"mtime":1608298914800,"results":"15","hashOfConfig":"11"},{"size":471,"mtime":1608226018000,"results":"16","hashOfConfig":"11"},{"size":2529,"mtime":1608224228000,"results":"17","hashOfConfig":"11"},{"size":952,"mtime":1608224228000,"results":"18","hashOfConfig":"11"},{"size":4973,"mtime":1608230586877,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1tsba6h",{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\index.js",[],["45","46"],"D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\forecast.js",["47","48","49","50","51","52","53"],"import './App.css';\nimport background from './background.jpg';\nimport React, { useState, useEffect } from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Forecasticon from '@material-ui/icons/WbSunny';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport Polutionicon from '@material-ui/icons/FilterDrama';\nimport HomeIcon from '@material-ui/icons/Home';\nimport coff from './coff.png';\nimport foff from './foff.png';\nimport Switch from '@material-ui/core/Switch';\nimport WeatherForecast from './WeatherForecast.js';\nimport './main.css';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\n\nconst api = {\n  key: \"da02638594a59f25557527b8e6cd869d\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction ForecastHour() {\n    const [isFah, setisFah] = useState('false');\n    const [query, setQuery] = useState('');\n    const [weather, setWeather] = useState(null);\n    const [isLoading, setIsLoading] = useState(false)\n  useEffect (()=> {\n  \nasync function showPosition(position){\n  try {\n    setIsLoading(true)\n    const latitude =  position.coords.latitude \n    const longitude = position.coords.longitude\n\n    console.log(latitude,longitude)\n    \n   // const getDataByCity = (`https://api.openweathermap.org/data/2.5/forecast?q=${region}&units=metric&appid=${api.key}`);\n    const forecast = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=metric&appid=${api.key}`);\n\n      setWeather({data: forecast.data}); \n      console.log(forecast.data)\n      setIsLoading(false)\n  } catch (error) {\n      console.log(error)\n  }\n}\n    function getLocation() {\n      if (navigator.geolocation) {\n        console.log(navigator.geolocation.getCurrentPosition(showPosition));\n      } else {\n         alert('Error')\n      }\n    }\n    \n    getLocation()\n  }, [])\n\n  \n\n\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n     // setIsLoading(true)\n      fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${query}&units=metric&appid=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          if (!result) {return}\n          setWeather({data: result}); \n         // setIsLoading(false)\n         // setQuery('');\n          //setWeather(result); \n          console.log(result);\n        });\n    }\n  }\n\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days =[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day}, ${date} ${month} ${year}`\n  }\n  const useStyles = makeStyles({\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n  });\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <Link to = \"/forecast\">\n          <ListItem button  style={{color: \"black\"}} >\n            <ListItemIcon>  <Forecasticon /></ListItemIcon>\n            <ListItemText primary = \"Forecast\" />\n          </ListItem>\n        </Link>\n      </List>\n      <List>\n        <Link to = \"/polution\">\n          <ListItem button  style={{color: \"black\"}}>\n            <ListItemIcon>  <Polutionicon/></ListItemIcon>\n            <ListItemText primary = \"Polution\" />\n          </ListItem>\n        </Link>\n      </List>\n      <List>\n        <Link to = \"/home\">\n          <ListItem button  style={{color: \"black\"}}>\n            <ListItemIcon>  <HomeIcon/></ListItemIcon>\n            <ListItemText primary = \"Home\" />\n          </ListItem>\n        </Link>\n      </List>\n      <List>\n        <Link to = \"/Aboutus\">\n          <ListItem button  style={{color: \"black\"}}>\n            <ListItemIcon>  <InfoIcon/></ListItemIcon>\n            <ListItemText primary = \"About Us\" />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n  );\n\n \n\n\n  return (\n    <div className=\"app\">\n      {['Menu'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} className=\"menubutton\">{anchor}</Button>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n      \n      <main>\n      <div className=\"searchbox\">\n          <input type=\"text\" className=\"search\" placeholder=\"Search country or city here...\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}></input>\n        </div>\n        {!isLoading && weather ? <WeatherForecast data ={weather}/>:<p>Loading Data . . . </p>} \n          \n    \n      </main>\n    </div>\n  );\n}\n\nexport default ForecastHour;\n\n\n  \n","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\reportWebVitals.js",[],"D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\App.js",["54","55","56","57"],"import './App.css';\nimport background from './background.jpg';\nimport React, { useState, useEffect } from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Forecasticon from '@material-ui/icons/WbSunny';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport Polutionicon from '@material-ui/icons/FilterDrama';\nimport HomeIcon from '@material-ui/icons/Home';\nimport coff from './coff.png';\nimport foff from './foff.png';\nimport Switch from '@material-ui/core/Switch';\nimport Aboutus from './aboutus';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\nconst api = {\n  key: \"da02638594a59f25557527b8e6cd869d\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  useEffect (()=> {\n  \nasync function showPosition(position){\n  try {\n    \n    const latitude =  position.coords.latitude \n    const longitude = position.coords.longitude\n\n    console.log(latitude,longitude)\n    \n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${api.key}`)\n      res.data.main.temp -= 273\n\n      setWeather(res.data); \n      console.log(res)\n  } catch (error) {\n      console.log(error)\n  }\n}\n    function getLocation() {\n      if (navigator.geolocation) {\n        console.log(navigator.geolocation.getCurrentPosition(showPosition));\n      } else {\n         alert('Error')\n      }\n    }\n    \n    getLocation()\n  }, [])\n\n  \n\n  const [isFah, setisFah] = useState('false');\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setQuery('');\n          setWeather(result); \n          console.log(result);\n        });\n    }\n  }\n\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days =[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day}, ${date} ${month} ${year}`\n  }\n  const useStyles = makeStyles({\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n  });\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <Link to = \"/forecast\">\n          <ListItem button style={{color: \"black\"}}>\n            <ListItemIcon>  <Forecasticon /></ListItemIcon>\n            <ListItemText primary = \"Forecast\" />\n          </ListItem>\n        </Link>\n      </List>\n      <List>\n        <Link to = \"/polution\">\n          <ListItem button style={{color: \"black\"}}>\n            <ListItemIcon>  <Polutionicon/></ListItemIcon>\n            <ListItemText primary = \"Polution\" />\n          </ListItem>\n        </Link>\n      </List>\n      <List>\n        <Link to = \"/home\">\n          <ListItem button style={{color: \"black\"}}>\n            <ListItemIcon>  <HomeIcon/></ListItemIcon>\n            <ListItemText primary = \"Home\" />\n          </ListItem>\n        </Link>\n      </List>\n      <List>\n        <Link to = \"/Aboutus\">\n          <ListItem button style={{color: \"black\"}}>\n            <ListItemIcon>  <InfoIcon/></ListItemIcon>\n            <ListItemText primary = \"About Us\" />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n  );\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    isFah ? getFah() : getCel()\n\n      setisFah(!isFah)\n  };\n\n  const getFah = () =>{\n    const newTemp = (weather.main.temp * 9 / 5) +32;\n    setWeather({\n      ...weather, main: {...weather.main, temp: newTemp } \n    })\n  }\n  const getCel = () => {\n    const newTemp = (weather.main.temp - 32)  * 5 / 9;\n    setWeather({\n      ...weather, main: {...weather.main, temp: newTemp } \n    })\n  }\n\n\n  return (\n    <div className=\"app\">\n      {['Menu'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <Button onClick={toggleDrawer(anchor, true)} className=\"menubutton\">{anchor}</Button>\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      ))}\n        <Switch\n            className =\"switch\"\n            checked={state.Fahrenheit}\n            onChange={handleChange}\n            color=\"secondary\"\n            name=\"Fahrenheit\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n          />\n        <img className=\"celsius\" src={coff}></img>\n        <img className=\"fahrenheit\" src={foff}></img>\n      <main>\n        <div className=\"searchbox\">\n          <input type=\"text\" className=\"search\" placeholder=\"Search country or city here...\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}></input>\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n            <div className=\"location-place\">\n              <div className=\"location\">{weather.name}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"suhu-place\">\n              <div className=\"suhu\">\n                {Math.round(weather.main.temp)}{isFah ? <span>&#8451;</span> : <span>&#8457;</span> } \n              </div>\n            </div>\n            <div className=\"weather-place\">\n              <img className=\"city-icon\" src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description}/>\n              <div className=\"weather\">\n                {weather.weather[0].description}\n              </div>\n            </div>\n        </div>  \n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\polution.js",["58"],"import './App.css';\nimport background from './background.jpg';\nimport React, { useState, useEffect } from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Forecasticon from '@material-ui/icons/WbSunny';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport Polutionicon from '@material-ui/icons/FilterDrama';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\n\n\nconst api = {\n  key: \"da02638594a59f25557527b8e6cd869d\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction Polution() {\n  useEffect (()=> {\n  \nasync function showPosition(position){\n  try {\n    \n   const latitude =  position.coords.latitude \n    const longitude = position.coords.longitude\n    console.log(latitude,longitude)\n    \n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/air_pollution?lat=${latitude}&lon=${longitude}&appid=${api.key}`)\n      const raze = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${api.key}`)\n      \n      const data = {\n        pm2_5: res.data.list[0].components.pm2_5 ,\n        pm10: res.data.list[0].components.pm10 ,\n        aqi: res.data.list[0].main.aqi *= 10 , \n        name : raze.data.name ,\n    }\n      setWeather(data); \n      console.log(res)\n      console.log(raze)\n  } catch (error) {\n      console.log(error)\n  }\n}\n    function getLocation() {\n      if (navigator.geolocation) {\n        console.log(navigator.geolocation.getCurrentPosition(showPosition));\n      } else {\n         alert('Error')\n      }\n    }\n    \n    getLocation()\n  }, [])\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          const {lat, lon} = result.coord\n          console.log(lat,lon)\n          let data = { name:result.name}\n          //setWeather({name: result.name})\n          fetch(`https://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${api.key}`)\n          .then(res=>res.json())\n          .then(res=>{\n            console.log(res)\n            setWeather({...data,pm2_5: res.list[0].components.pm2_5 ,\n              pm10: res.list[0].components.pm10 ,\n              aqi: res.list[0].main.aqi *= 10 ,  })\n          })\n          \n         // setQuery('');\n          //setWeather(result); \n          console.log(result);\n        });\n    }\n  }\n\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days =[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day}, ${date} ${month} ${year}`\n  }\n  const useStyles = makeStyles({\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n  });\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n        <Link to = \"/forecast\">\n          <ListItem button  style={{color: \"black\"}}>\n            <ListItemIcon>  <Forecasticon /></ListItemIcon>\n            <ListItemText primary = \"Forecast\" />\n          </ListItem>\n        </Link>\n      </List>\n      <List>\n        <Link to = \"/polution\">\n          <ListItem button  style={{color: \"black\"}}>\n            <ListItemIcon>  <Polutionicon/></ListItemIcon>\n            <ListItemText primary = \"Polution\" />\n          </ListItem>\n        </Link>\n      </List>\n      <List>\n        <Link to = \"/home\">\n          <ListItem button  style={{color: \"black\"}}>\n            <ListItemIcon>  <HomeIcon/></ListItemIcon>\n            <ListItemText primary = \"Home\" />\n          </ListItem>\n        </Link>\n      </List>\n      <List>\n        <Link to = \"/Aboutus\">\n          <ListItem button  style={{color: \"black\"}}>\n            <ListItemIcon>  <InfoIcon/></ListItemIcon>\n            <ListItemText primary = \"About Us\" />\n          </ListItem>\n        </Link>\n      </List>\n    </div>\n      \n     \n  \n  );\n  return (\n    <div className=\"app\">\n      {['Menu'].map((anchor) => (\n  <React.Fragment key={anchor}>\n    <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n      {list(anchor)}\n    </Drawer>\n  </React.Fragment>\n))}\n      <main>\n     \n        <div className=\"searchbox\">\n          <input type=\"text\" className=\"search\" placeholder=\"Search country or city here...\" onChange={e => setQuery(e.target.value)} value={query} onKeyPress={search}></input>\n        </div>\n        {weather ? (\n              <div>\n                 <div className=\"location-place\">\n                 <div className=\"location\">{weather.name}</div>\n                 <div className=\"date\">{dateBuilder(new Date())}</div>\n               </div>\n               <div className =\"Box\">\n               <div className=\"aqi\">\n            <p>  Air Quality Index :{weather.aqi}</p>  \n            </div>\n             <div className=\"pm2\">\n                  <p>  Particulate Matter 2.5 mm :{weather.pm2_5}</p>  \n              </div>\n              <div className=\"pm10\">\n                <p>  Particulate Matter 10 mm:{weather.pm10}</p>  \n              <div className=\"pm10\">\n                  </div>\n            </div>\n           \n            </div>\n        </div>  \n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default Polution;\n","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\WeatherForecast.js",["59"],"import React, { Component } from \"react\";\nimport './main.css';\n\nimport ForecastTiles from \"./ForecastTiles\";\n\n\nconst WeatherForecast = ({ data }) => {\n const { city, list } = data.data\n\n    // const { name } = city;\n // console.log (list)\n // console.log (data)\n    return (\n      <div className=\"weather-forecast-wrapper\">\n      <h1>{city.name} Weather Forecast</h1>\n      \n      <ForecastTiles forecasts={list} />\n      </div>\n    );\n};\n\nexport default WeatherForecast;","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\ForecastTiles.js",["60","61"],"import React, { Component } from \"react\";\nimport DetailedInfo from \"./DetailedInfo\";\n\nexport default class ForecastTiles extends Component {\n\n  \n  _groupByDays = data => {\n    return (data.reduce((list, item) => {\n      const forecastDate = item.dt_txt.substr(0,10);\n      list[forecastDate] = list[forecastDate] || [];\n      list[forecastDate].push(item);\n\n      return list;\n    }, {}));\n  };\n\n \n  _getDayInfo = data => {\n    const daysOfWeek = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n    return daysOfWeek[new Date(data[0].dt * 1000).getDay()];\n  };\n\n \n  _getIcon = data => `https://openweathermap.org/img/w/${data[0].weather[0].icon}.png`;\n\n  \n  _getInfo = (data, min=[], max=[], humidity=[]) => {\n    data.map(item => {\n      max.push(item.main.temp_max);\n      min.push(item.main.temp_min);\n      humidity.push(item.main.humidity);\n    });\n\n    const minMax = {\n      min: Math.round(Math.min(...min)),\n      max: Math.round(Math.max(...max)),\n    };\n\n  \n    const avgHumdity = Math.round(humidity.reduce((curr, next) => curr + next) / humidity.length);\n\n    return (\n      <div className=\"weather-info\">\n        <div className=\"min-max\">\n          <strong>{`${minMax.max}°C`}</strong> / {`${minMax.min}°C`}\n        </div>\n        <div className=\"more-info\">\n          {`Avg. Humidity: ${avgHumdity}%`}\n        </div>\n      </div>\n    );\n  };\n\n  \n  _showMoreInfo = (index) => {\n    const elm = this.refs[`div-${index}`];\n    const expandedElment = document.querySelector(\".expanded\");\n\n    elm.classList.add(\"expanded\");\n    expandedElment !== null && expandedElment.classList.remove(\"expanded\");\n  }\n\n  render() {\n\n    const { forecasts } = this.props;\n    const tiles = Object.values(this._groupByDays(forecasts));\n\n \n    const forecastTiles = tiles.length > 5 ? tiles.slice(0, 5) : tiles;\n\n    return (\n      <div className=\"forecast-tiles\">\n        {forecastTiles.map((item, i) => (\n          <div\n            className={`forecast-tile tile-${i}`}\n            key={i}\n            ref={`div-${i}`}\n            onClick={() => {this._showMoreInfo(i)}}\n          >\n            <div className=\"primary-info\">\n              <div className=\"icon\">\n                <img src={this._getIcon(item)} />\n                {this._getDayInfo(item)}\n              </div>\n              {this._getInfo(item)}\n            </div>\n            <div className=\"detailed-info\" key={i}>\n              <DetailedInfo data={item} />\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\DetailedInfo.js",[],"D:\\UAS SEMESTER 3 UMN\\PTI LAB\\openweather_updateicon\\openweather\\src\\aboutus.js",["62","63","64","65","66","67","68","69","70","71","72","73"],"import './App.css';\nimport background from './background.jpg';\nimport React, { useState, useEffect } from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Forecasticon from '@material-ui/icons/WbSunny';\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport Polutionicon from '@material-ui/icons/FilterDrama';\nimport HomeIcon from '@material-ui/icons/Home';\nimport coff from './coff.png';\nimport foff from './foff.png';\nimport Switch from '@material-ui/core/Switch';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Git from './GitHub.png';\n\nfunction Aboutus () { \n    const useStyles = makeStyles({\n        list: {\n          width: 250,\n        },\n        fullList: {\n          width: 'auto',\n        },\n      });\n      const classes = useStyles();\n      const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n      });\n    \n      const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n      };\n    \n      const list = (anchor) => (\n        <div\n          className={clsx(classes.list, {\n            [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n          })}\n          role=\"presentation\"\n          onClick={toggleDrawer(anchor, false)}\n          onKeyDown={toggleDrawer(anchor, false)}\n        >\n          <List>\n            <Link to = \"/forecast\">\n              <ListItem button  style={{color: \"black\"}}>\n                <ListItemIcon>  <Forecasticon /></ListItemIcon>\n                <ListItemText primary = \"Forecast\" />\n              </ListItem>\n            </Link>\n          </List>\n          <List>\n            <Link to = \"/polution\">\n              <ListItem button  style={{color: \"black\"}}>\n                <ListItemIcon>  <Polutionicon/></ListItemIcon>\n                <ListItemText primary = \"Polution\" />\n              </ListItem>\n            </Link>\n          </List>\n          <List>\n            <Link to = \"/home\">\n              <ListItem button  style={{color: \"black\"}}>\n                <ListItemIcon>  <HomeIcon/></ListItemIcon>\n                <ListItemText primary = \"Home\" />\n              </ListItem>\n            </Link>\n          </List>\n          <List>\n            <Link to = \"/Aboutus\">\n              <ListItem button  style={{color: \"black\"}}>\n                <ListItemIcon>  <InfoIcon/></ListItemIcon>\n                <ListItemText primary = \"About Us\" />\n              </ListItem>\n            </Link>\n          </List>\n        </div>\n      );\n    \n    \n    \n    \n      return (\n        <div className=\"app\">\n          {['Menu'].map((anchor) => (\n            <React.Fragment key={anchor}>\n              <Button onClick={toggleDrawer(anchor, true)} className=\"menubutton\">{anchor}</Button>\n              <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                {list(anchor)}\n              </Drawer>\n            </React.Fragment>\n          ))}\n            \n            \n          <main>\n              <div className =\"About\">\n                <h1 className=\"US\">About Us</h1>\n                \n            <div className = \"Nama1\">\n                <h1><a href=\"https://github.com/jhrjason1\"><img src={Git} className= \"git\" ></img></a> Jason Haryanto</h1>\n                <p>00000037352</p>\n\n            </div>\n            <div className = \"Nama2\">\n                <h1><a href=\"https://github.com/juanalvito\"><img src={Git} className= \"git\" ></img></a> Juan Alvito</h1>\n                <p>00000037193</p>\n            </div>\n            <div className = \"Nama3\">\n                <h1><a href=\"https://github.com/LeonardoSteven\"><img src={Git} className= \"git\" ></img></a> Leonardo Steven</h1>\n                <p>00000037279</p>\n            </div>\n            <div className = \"Nama4\">\n                <h1><a href=\"https://github.com/HillaryDorotheaKristianto\"><img src={Git} className= \"git\" ></img></a> Hillary Dorothea K</h1>\n                <p>00000037192</p>\n            </div>\n            <br></br>\n            <br></br>\n\n            <div className=\"Special\">\n                <h1>Special Thanks To : </h1> \n            </div>\n            <div className =\"shifu\">\n                <h1><a href=\"https://github.com/andibalo\"><img src={Git} className= \"git\" ></img></a> Shifu Andi Usman Balo</h1>\n                <h2> Pogchamp </h2>\n                <p></p>\n            </div>\n            </div>\n          </main>\n        </div>\n      );\n    }\n\n\nexport default Aboutus;\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":18},{"ruleId":"78","severity":1,"message":"82","line":17,"column":8,"nodeType":"80","messageId":"81","endLine":17,"endColumn":12},{"ruleId":"78","severity":1,"message":"83","line":18,"column":8,"nodeType":"80","messageId":"81","endLine":18,"endColumn":12},{"ruleId":"78","severity":1,"message":"84","line":19,"column":8,"nodeType":"80","messageId":"81","endLine":19,"endColumn":14},{"ruleId":"78","severity":1,"message":"85","line":32,"column":12,"nodeType":"80","messageId":"81","endLine":32,"endColumn":17},{"ruleId":"78","severity":1,"message":"86","line":32,"column":19,"nodeType":"80","messageId":"81","endLine":32,"endColumn":27},{"ruleId":"78","severity":1,"message":"87","line":88,"column":9,"nodeType":"80","messageId":"81","endLine":88,"endColumn":20},{"ruleId":"78","severity":1,"message":"79","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":18},{"ruleId":"78","severity":1,"message":"88","line":20,"column":8,"nodeType":"80","messageId":"81","endLine":20,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":197,"column":9,"nodeType":"91","endLine":197,"endColumn":45},{"ruleId":"89","severity":1,"message":"90","line":198,"column":9,"nodeType":"91","endLine":198,"endColumn":48},{"ruleId":"78","severity":1,"message":"79","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":18},{"ruleId":"78","severity":1,"message":"92","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"94","line":28,"column":19,"nodeType":"95","messageId":"96","endLine":28,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":82,"column":17,"nodeType":"91","endLine":82,"endColumn":50},{"ruleId":"78","severity":1,"message":"79","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":18},{"ruleId":"78","severity":1,"message":"97","line":3,"column":17,"nodeType":"80","messageId":"81","endLine":3,"endColumn":25},{"ruleId":"78","severity":1,"message":"98","line":3,"column":27,"nodeType":"80","messageId":"81","endLine":3,"endColumn":36},{"ruleId":"78","severity":1,"message":"99","line":14,"column":8,"nodeType":"80","messageId":"81","endLine":14,"endColumn":13},{"ruleId":"78","severity":1,"message":"82","line":17,"column":8,"nodeType":"80","messageId":"81","endLine":17,"endColumn":12},{"ruleId":"78","severity":1,"message":"83","line":18,"column":8,"nodeType":"80","messageId":"81","endLine":18,"endColumn":12},{"ruleId":"78","severity":1,"message":"84","line":19,"column":8,"nodeType":"80","messageId":"81","endLine":19,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":112,"column":60,"nodeType":"91","endLine":112,"endColumn":93},{"ruleId":"89","severity":1,"message":"90","line":117,"column":61,"nodeType":"91","endLine":117,"endColumn":94},{"ruleId":"89","severity":1,"message":"90","line":121,"column":65,"nodeType":"91","endLine":121,"endColumn":98},{"ruleId":"89","severity":1,"message":"90","line":125,"column":76,"nodeType":"91","endLine":125,"endColumn":109},{"ruleId":"89","severity":1,"message":"90","line":135,"column":59,"nodeType":"91","endLine":135,"endColumn":92},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'background' is defined but never used.","Identifier","unusedVar","'coff' is defined but never used.","'foff' is defined but never used.","'Switch' is defined but never used.","'isFah' is assigned a value but never used.","'setisFah' is assigned a value but never used.","'dateBuilder' is assigned a value but never used.","'Aboutus' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]